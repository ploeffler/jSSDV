/*
 * Copyright (C) 2017 User
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package imageing;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.attribute.BasicFileAttributes;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author User
 */
public class rxItem extends javax.swing.JPanel {

    /**
     * Creates new form rxItem
     */
    public rxItem() {
        initComponents();
    }
    public void setValues (String filename) throws IOException{
       
        
        ImageIcon imageIcon = new ImageIcon(filename); // load the image to a imageIcon
Image tempimage = imageIcon.getImage(); // transform it 

Image newimg = tempimage.getScaledInstance(120, 120,  java.awt.Image.SCALE_SMOOTH); // scale it the smooth way  
imageIcon = new ImageIcon(newimg);  // transform it back
        
        
        
        File imgfile = new File(filename);
        String sender = imgfile.getName().substring(0,8);
       
        BasicFileAttributes attributes = Files.readAttributes(imgfile.toPath(), BasicFileAttributes.class);
         
        String timestamp = attributes.creationTime().toString();
        String mode = "pureSSDV";
        image.setIcon(imageIcon);
        sendercall.setText(sender);
        rxdatetime.setText(timestamp);
        rxmode.setText(mode);
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        image = new javax.swing.JLabel();
        sendercall = new javax.swing.JLabel();
        rxdatetime = new javax.swing.JLabel();
        rxmode = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        image.setMaximumSize(new java.awt.Dimension(120, 120));
        image.setMinimumSize(new java.awt.Dimension(120, 120));
        image.setOpaque(true);
        image.setPreferredSize(new java.awt.Dimension(120, 120));

        sendercall.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sendercall.setText("NOCALL");

        rxdatetime.setText("12.04.2017 22:00 UTC");

        rxmode.setText("pureSSDV");
        rxmode.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rxmode)
                            .addComponent(sendercall)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rxdatetime)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sendercall)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rxmode))
                    .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rxdatetime))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel image;
    private javax.swing.JLabel rxdatetime;
    private javax.swing.JLabel rxmode;
    private javax.swing.JLabel sendercall;
    // End of variables declaration//GEN-END:variables
}
