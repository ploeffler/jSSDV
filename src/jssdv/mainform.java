/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jssdv;

import static com.sun.jmx.mbeanserver.Util.cast;
import connector.Rigctl;
import imageing.RegionSelectorListener;
import imageing.Scalr;
import imageing.TXStockImage;
import imageing.addStockeditForm;
import imageing.importimage;
import imageing.rxListrenderer;
import imageing.rxItemList;
import imageing.txStockList;
import imageing.txStockListRenderer;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.border.TitledBorder;
import javax.xml.stream.XMLStreamException;
import modelist.Opmode;
//import modelist.modelist;
import modelist.opmodelist;
import modelist.rxModeList;
import modelist.txModeList;

/**
 *
 * @author User
 */
public class mainform extends javax.swing.JFrame {
opmodelist myopmodes = null;
    /**
     * Creates new form mainform
     */
    public mainform() throws XMLStreamException, FileNotFoundException {
        initComponents();
        
        myopmodes = new opmodelist(settings_main_dir.getText());
        //  sysopmodelist mysysopmodelist = new sysopmodelist(settings_main_dir.getText()); 
        //opmode modelist[] = [];
        RXmodeList.setModel(myopmodes);
        TXModeList.setModel(myopmodes);
        
        RXmodeList.setCellRenderer(new rxModeList());
        TXModeList.setCellRenderer(new txModeList());
        
        rxImgList.setModel(new rxItemList(settings_dirs_rxdir.getText()));
        rxImgList.setCellRenderer(new rxListrenderer());
        
        txImgList.setModel(new txStockList(settings_dir_txstockdir.getText()));
        
        txImgList.setCellRenderer(new txStockListRenderer());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        dirChooser = new javax.swing.JFileChooser();
        buttonGroup1 = new javax.swing.ButtonGroup();
        dirChooser1 = new javax.swing.JFileChooser();
        getCQimg_Dialog = new javax.swing.JFileChooser();
        importImagePane = new javax.swing.JOptionPane();
        addStockFileChooser = new javax.swing.JFileChooser();
        topPane = new javax.swing.JTabbedPane();
        rxPanel = new javax.swing.JPanel();
        rxHistory = new javax.swing.JScrollPane();
        rxImgList = new javax.swing.JList<>();
        rxenableRSID = new javax.swing.JCheckBox();
        rxrespectheadermode = new javax.swing.JCheckBox();
        imgRXpane = new javax.swing.JTabbedPane();
        featuredRXpanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        blocknumber1 = new javax.swing.JLabel();
        RXtransID1 = new javax.swing.JLabel();
        jProgressBar2 = new javax.swing.JProgressBar();
        jToggleButton1 = new javax.swing.JToggleButton();
        rxheaderoverlaydata = new javax.swing.JProgressBar();
        jButton6 = new javax.swing.JButton();
        jCheckBox2 = new javax.swing.JCheckBox();
        rawrxpanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        blocknumber = new javax.swing.JLabel();
        RXtransID = new javax.swing.JLabel();
        qsorun = new javax.swing.JToggleButton();
        qsoPanel = new javax.swing.JPanel();
        qso_callsign = new javax.swing.JTextField();
        qso_Name = new javax.swing.JTextField();
        qso_qrg = new javax.swing.JTextField();
        qso_digimode = new javax.swing.JTextField();
        qso_logButton = new javax.swing.JButton();
        qso_starttime = new javax.swing.JTextField();
        qso_starttime1 = new javax.swing.JTextField();
        rxModemset = new javax.swing.JLabel();
        SignalLevel = new javax.swing.JProgressBar();
        jScrollPane9 = new javax.swing.JScrollPane();
        RXmodeList = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        txPanel = new javax.swing.JPanel();
        tximgPane = new javax.swing.JTabbedPane();
        tximgPanel = new javax.swing.JPanel();
        compressionSlider = new javax.swing.JSlider();
        tximage = new javax.swing.JLabel();
        qick_choose_txImage = new javax.swing.JButton();
        tximgsizeSlider = new javax.swing.JSlider();
        overlayPanel = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        cq_beaconPanel = new javax.swing.JPanel();
        autoiAPRSstatus = new javax.swing.JCheckBox();
        cqQUICKsettings = new javax.swing.JPanel();
        CQinterval = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        autoCQ = new javax.swing.JCheckBox();
        CQintervalLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        quickcq_image = new javax.swing.JLabel();
        chooseCQimgButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txImgList = new javax.swing.JList<>();
        jProgressBar1 = new javax.swing.JProgressBar();
        abortTXbutton = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        TXModeList = new javax.swing.JList<>();
        mainTXButton = new javax.swing.JButton();
        addStockButton = new javax.swing.JButton();
        mainModemselector = new javax.swing.JComboBox<>();
        mainEncSelector = new javax.swing.JComboBox<>();
        settingsPanel = new javax.swing.JPanel();
        settingsmenuPane = new javax.swing.JTabbedPane();
        settings_fldigiPanel = new javax.swing.JPanel();
        settings_fldigidefaulthost = new javax.swing.JTextField();
        settings_fldigidefaultport = new javax.swing.JTextField();
        settings_editdefaultfldigi = new javax.swing.JToggleButton();
        aprsBEACONQUICKsettings = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        settings_autoAPRS_fldigibeacon = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        fldigiAPRSintervalLabel = new javax.swing.JLabel();
        settings_fldigibeaconinterval = new javax.swing.JSlider();
        settings_fldigi_spotting = new javax.swing.JCheckBox();
        settings_fldigi_interval = new javax.swing.JSlider();
        autostart_fldigi = new javax.swing.JCheckBox();
        autoconnect_fldigi = new javax.swing.JCheckBox();
        settings_aprsPanel = new javax.swing.JPanel();
        settings_iAPRSserver = new javax.swing.JTextField();
        settings_iAPRSport = new javax.swing.JTextField();
        settings_editdefaultfldigi1 = new javax.swing.JToggleButton();
        settings_iAPRSpassword = new javax.swing.JTextField();
        settings_iAPRSport1 = new javax.swing.JTextField();
        iAPRSfeedbackRX = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        settings_modesPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        settings_directoryPanel = new javax.swing.JPanel();
        settings_main_dir = new javax.swing.JTextField();
        mainfolderselect = new javax.swing.JButton();
        settings_dir_txstockdir = new javax.swing.JTextField();
        txstockfolderselect = new javax.swing.JButton();
        settings_dirs_rxdir = new javax.swing.JTextField();
        rximagesfolderselect = new javax.swing.JButton();
        txlogdir = new javax.swing.JTextField();
        txlogdirselect = new javax.swing.JButton();
        settings_freqPanel = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        settings_freq_table = new javax.swing.JTable();
        settings_logging = new javax.swing.JPanel();
        autolog = new javax.swing.JCheckBox();
        autoimagesave = new javax.swing.JCheckBox();
        imagesaveformat = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        rxautomin = new javax.swing.JSlider();
        jTextField5 = new javax.swing.JTextField();
        settings_imgprocessing = new javax.swing.JPanel();
        savesettings = new javax.swing.JButton();
        debugPanel = new javax.swing.JPanel();
        debugtext = new javax.swing.JTextField();
        rxQ = new javax.swing.JTextField();
        rxQ1 = new javax.swing.JTextField();
        sidePane = new javax.swing.JTabbedPane();
        connections_settingsPanel = new javax.swing.JPanel();
        fldigiPanel = new javax.swing.JPanel();
        main_fldigiport = new javax.swing.JTextField();
        fldigi_connectButton = new javax.swing.JToggleButton();
        main_fldigihost = new javax.swing.JTextField();
        fldigisetdefaultButton = new javax.swing.JButton();
        iAPRSPanel = new javax.swing.JPanel();
        fldigiport1 = new javax.swing.JTextField();
        iAPRS_connectButton = new javax.swing.JToggleButton();
        iAPRSsetdefaultButton = new javax.swing.JButton();
        fldigihost1 = new javax.swing.JTextField();
        rigPanel = new javax.swing.JPanel();
        QRG = new javax.swing.JLabel();
        rxidButton = new javax.swing.JToggleButton();
        txidButton = new javax.swing.JToggleButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        qrgMHz = new javax.swing.JTextField();
        jScrollBar1 = new javax.swing.JScrollBar();
        qrgkHz = new javax.swing.JTextField();
        jScrollBar2 = new javax.swing.JScrollBar();
        qrgHz = new javax.swing.JTextField();
        jScrollBar3 = new javax.swing.JScrollBar();
        tuneButton = new javax.swing.JToggleButton();
        qaddebug = new javax.swing.JTextField();
        digisquelch = new javax.swing.JSlider();
        digisquelchswitch = new javax.swing.JCheckBox();
        CarrierCenter = new javax.swing.JSlider();
        SigQual = new javax.swing.JProgressBar();
        sidetalkPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();

        dirChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        addStockFileChooser.setCurrentDirectory(new java.io.File("C:\\Users\\User\\Pictures"));
        addStockFileChooser.setDialogTitle("Image Import");
        addStockFileChooser.setPreferredSize(new java.awt.Dimension(800, 700));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("jSSDV");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        topPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        topPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        rxPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        rxImgList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        rxImgList.setDragEnabled(true);
        rxImgList.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        rxImgList.setValueIsAdjusting(true);
        rxImgList.setVisibleRowCount(2);
        rxHistory.setViewportView(rxImgList);

        rxenableRSID.setSelected(true);
        rxenableRSID.setText("enable RxID");
        rxenableRSID.setContentAreaFilled(false);
        rxenableRSID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jssdv/switch-off.png"))); // NOI18N
        rxenableRSID.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/jssdv/switch-on.png"))); // NOI18N
        rxenableRSID.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rxenableRSIDStateChanged(evt);
            }
        });

        rxrespectheadermode.setSelected(true);
        rxrespectheadermode.setText("respect Mode in HeaderData");
        rxrespectheadermode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jssdv/switch-off.png"))); // NOI18N
        rxrespectheadermode.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/jssdv/switch-on.png"))); // NOI18N

        imgRXpane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jLabel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Image-Blocks"));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jssdv/no-image_320.png"))); // NOI18N
        jLabel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "NOCALL"));

        blocknumber1.setText("16");
        blocknumber1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Blockcount"));

        RXtransID1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        RXtransID1.setText("16");
        RXtransID1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Trans-ID"));

        jProgressBar2.setBorder(javax.swing.BorderFactory.createTitledBorder("similarity-check"));

        jToggleButton1.setText("Send BSR");

        rxheaderoverlaydata.setBorder(javax.swing.BorderFactory.createTitledBorder("Header Overlay Data"));

        jButton6.setText("restore BS from prev.");

        jCheckBox2.setText("show without overlay");

        javax.swing.GroupLayout featuredRXpanelLayout = new javax.swing.GroupLayout(featuredRXpanel);
        featuredRXpanel.setLayout(featuredRXpanelLayout);
        featuredRXpanelLayout.setHorizontalGroup(
            featuredRXpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(featuredRXpanelLayout.createSequentialGroup()
                .addComponent(jLabel10)
                .addGap(0, 16, Short.MAX_VALUE))
            .addGroup(featuredRXpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(featuredRXpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(featuredRXpanelLayout.createSequentialGroup()
                        .addGroup(featuredRXpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jProgressBar2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rxheaderoverlaydata, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(featuredRXpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(featuredRXpanelLayout.createSequentialGroup()
                        .addGroup(featuredRXpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RXtransID1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(blocknumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        featuredRXpanelLayout.setVerticalGroup(
            featuredRXpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(featuredRXpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(featuredRXpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1)
                    .addGroup(featuredRXpanelLayout.createSequentialGroup()
                        .addComponent(RXtransID1)
                        .addGap(3, 3, 3)
                        .addComponent(blocknumber1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(featuredRXpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(featuredRXpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rxheaderoverlaydata, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(386, Short.MAX_VALUE))
        );

        imgRXpane.addTab("Image reception", new javax.swing.ImageIcon(getClass().getResource("/jssdv/file-picture.png")), featuredRXpanel); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jssdv/no-image_320.png"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "NOCALL"));

        jLabel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Image-Blocks"));

        blocknumber.setText("16");
        blocknumber.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Blockcount"));

        RXtransID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        RXtransID.setText("16");
        RXtransID.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Trans-ID"));

        javax.swing.GroupLayout rawrxpanelLayout = new javax.swing.GroupLayout(rawrxpanel);
        rawrxpanel.setLayout(rawrxpanelLayout);
        rawrxpanelLayout.setHorizontalGroup(
            rawrxpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rawrxpanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 16, Short.MAX_VALUE))
            .addGroup(rawrxpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rawrxpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(blocknumber, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RXtransID, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rawrxpanelLayout.setVerticalGroup(
            rawrxpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rawrxpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rawrxpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rawrxpanelLayout.createSequentialGroup()
                        .addComponent(RXtransID)
                        .addGap(18, 18, 18)
                        .addComponent(blocknumber))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(473, Short.MAX_VALUE))
        );

        imgRXpane.addTab("raw image", new javax.swing.ImageIcon(getClass().getResource("/jssdv/puzzle.png")), rawrxpanel); // NOI18N

        qsorun.setText("Start QSO");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, qsoPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), qsorun, org.jdesktop.beansbinding.BeanProperty.create("selected"), "qsorunning");
        bindingGroup.addBinding(binding);

        qsorun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qsorunActionPerformed(evt);
            }
        });

        qsoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("QSO-Data"));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, qso_callsign, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), qsoPanel, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        qso_callsign.setText("N0CALL");
        qso_callsign.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Callsign"));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, qsoPanel, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), qso_callsign, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        qso_Name.setText("NoName");
        qso_Name.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Name"));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, qso_callsign, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), qso_Name, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        qso_qrg.setText("14.111");
        qso_qrg.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "QRG"));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, qso_callsign, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), qso_qrg, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        qso_digimode.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "DigiMode"));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, rxModemset, org.jdesktop.beansbinding.ELProperty.create("${text}"), qso_digimode, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, qso_callsign, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), qso_digimode, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        qso_logButton.setText("Log Contact");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, qso_callsign, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), qso_logButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        qso_starttime.setText("1.10.2017 17:00");
        qso_starttime.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Start"));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, qso_callsign, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), qso_starttime, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        qso_starttime1.setText("14.111");
        qso_starttime1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "End"));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, qso_callsign, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), qso_starttime1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout qsoPanelLayout = new javax.swing.GroupLayout(qsoPanel);
        qsoPanel.setLayout(qsoPanelLayout);
        qsoPanelLayout.setHorizontalGroup(
            qsoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qsoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(qso_callsign, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(qso_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(qso_qrg, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(qso_digimode, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(qso_starttime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(qso_starttime1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(qso_logButton))
        );
        qsoPanelLayout.setVerticalGroup(
            qsoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qsoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(qsoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qso_callsign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qso_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qso_qrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qso_digimode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qso_logButton)
                    .addComponent(qso_starttime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qso_starttime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rxModemset.setText("PSK500R");
        rxModemset.setBorder(javax.swing.BorderFactory.createTitledBorder("Modem"));

        SignalLevel.setToolTipText("");
        SignalLevel.setValue(10);
        SignalLevel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "SignalLevel"));

        RXmodeList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        RXmodeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        RXmodeList.setCellRenderer(txImgList.getCellRenderer());
        RXmodeList.setMaximumSize(new java.awt.Dimension(380, 170));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, txImgList, org.jdesktop.beansbinding.ELProperty.create("${selectedElement}"), RXmodeList, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);

        RXmodeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                RXmodeListValueChanged(evt);
            }
        });
        jScrollPane9.setViewportView(RXmodeList);

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Pictures\\Button-Blank-Gray-icon.png")); // NOI18N
        jLabel4.setText("DigiSquelch");

        javax.swing.GroupLayout rxPanelLayout = new javax.swing.GroupLayout(rxPanel);
        rxPanel.setLayout(rxPanelLayout);
        rxPanelLayout.setHorizontalGroup(
            rxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rxPanelLayout.createSequentialGroup()
                .addGroup(rxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rxPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(rxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SignalLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(rxPanelLayout.createSequentialGroup()
                                .addGroup(rxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rxModemset, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(qsorun)
                                    .addComponent(rxenableRSID)
                                    .addComponent(rxrespectheadermode)
                                    .addComponent(jLabel4))
                                .addGap(0, 51, Short.MAX_VALUE))))
                    .addComponent(qsoPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rxHistory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(imgRXpane, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        rxPanelLayout.setVerticalGroup(
            rxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rxPanelLayout.createSequentialGroup()
                        .addGroup(rxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rxPanelLayout.createSequentialGroup()
                                .addComponent(rxModemset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rxenableRSID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rxrespectheadermode)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addGap(63, 63, 63)
                                .addComponent(SignalLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(qsorun)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qsoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rxHistory))
                    .addComponent(imgRXpane, javax.swing.GroupLayout.DEFAULT_SIZE, 892, Short.MAX_VALUE))
                .addContainerGap())
        );

        topPane.addTab("RX                                             .", new javax.swing.ImageIcon(getClass().getResource("/jssdv/box-in.png")), rxPanel); // NOI18N

        txPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tximgPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        tximgPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        compressionSlider.setBackground(new java.awt.Color(250, 250, 250));
        compressionSlider.setForeground(new java.awt.Color(40, 40, 40));
        compressionSlider.setMajorTickSpacing(3);
        compressionSlider.setMaximum(9);
        compressionSlider.setMinorTickSpacing(1);
        compressionSlider.setPaintLabels(true);
        compressionSlider.setPaintTicks(true);
        compressionSlider.setSnapToTicks(true);
        compressionSlider.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Compression"));
        compressionSlider.setName("Compression"); // NOI18N

        tximage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jssdv/no-image_320.png"))); // NOI18N
        tximage.setText("TXIMAGE");
        tximage.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tximage.setPreferredSize(new java.awt.Dimension(320, 240));

        qick_choose_txImage.setText("select cq img");
        qick_choose_txImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                qick_choose_txImageMouseClicked(evt);
            }
        });
        qick_choose_txImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qick_choose_txImageActionPerformed(evt);
            }
        });

        tximgsizeSlider.setBackground(new java.awt.Color(250, 250, 250));
        tximgsizeSlider.setForeground(new java.awt.Color(40, 40, 40));
        tximgsizeSlider.setMajorTickSpacing(3);
        tximgsizeSlider.setMaximum(9);
        tximgsizeSlider.setMinorTickSpacing(1);
        tximgsizeSlider.setPaintLabels(true);
        tximgsizeSlider.setPaintTicks(true);
        tximgsizeSlider.setSnapToTicks(true);
        tximgsizeSlider.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Img. Size"));
        tximgsizeSlider.setName("Compression"); // NOI18N

        javax.swing.GroupLayout tximgPanelLayout = new javax.swing.GroupLayout(tximgPanel);
        tximgPanel.setLayout(tximgPanelLayout);
        tximgPanelLayout.setHorizontalGroup(
            tximgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tximgPanelLayout.createSequentialGroup()
                .addComponent(tximage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(qick_choose_txImage, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(11, 11, 11))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tximgPanelLayout.createSequentialGroup()
                .addGap(0, 4, Short.MAX_VALUE)
                .addGroup(tximgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(compressionSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tximgsizeSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        tximgPanelLayout.setVerticalGroup(
            tximgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tximgPanelLayout.createSequentialGroup()
                .addGroup(tximgPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tximage, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qick_choose_txImage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(compressionSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tximgsizeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        tximgPane.addTab("Image", tximgPanel);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout overlayPanelLayout = new javax.swing.GroupLayout(overlayPanel);
        overlayPanel.setLayout(overlayPanelLayout);
        overlayPanelLayout.setHorizontalGroup(
            overlayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(overlayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );
        overlayPanelLayout.setVerticalGroup(
            overlayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(overlayPanelLayout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 255, Short.MAX_VALUE))
        );

        tximgPane.addTab("Overlay", overlayPanel);

        autoiAPRSstatus.setText("auto send Status on iAPRS");

        cqQUICKsettings.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        CQinterval.setMajorTickSpacing(15);
        CQinterval.setMaximum(120);
        CQinterval.setMinorTickSpacing(5);
        CQinterval.setPaintLabels(true);
        CQinterval.setPaintTicks(true);
        CQinterval.setSnapToTicks(true);
        CQinterval.setToolTipText("");
        CQinterval.setValue(5);
        CQinterval.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Interval (Minutes)"));

        jLabel7.setText("minutes");

        autoCQ.setText("auto send CQ");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, CQinterval, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), autoCQ, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, CQinterval, org.jdesktop.beansbinding.ELProperty.create("${value}"), CQintervalLabel, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel5.setText("every");

        javax.swing.GroupLayout cqQUICKsettingsLayout = new javax.swing.GroupLayout(cqQUICKsettings);
        cqQUICKsettings.setLayout(cqQUICKsettingsLayout);
        cqQUICKsettingsLayout.setHorizontalGroup(
            cqQUICKsettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cqQUICKsettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cqQUICKsettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CQinterval, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cqQUICKsettingsLayout.createSequentialGroup()
                        .addComponent(autoCQ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CQintervalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cqQUICKsettingsLayout.setVerticalGroup(
            cqQUICKsettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cqQUICKsettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cqQUICKsettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(autoCQ)
                    .addComponent(jLabel5)
                    .addComponent(CQintervalLabel)
                    .addComponent(jLabel7))
                .addGap(22, 22, 22)
                .addComponent(CQinterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        quickcq_image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jssdv/no-image_320.png"))); // NOI18N
        quickcq_image.setText("jLabel4");
        quickcq_image.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        quickcq_image.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getCQimg(evt);
                quickcq_imageMouseClicked(evt);
            }
        });

        chooseCQimgButton.setText("select cq img");
        chooseCQimgButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseCQimgButtonMouseClicked(evt);
            }
        });
        chooseCQimgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseCQimgButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cq_beaconPanelLayout = new javax.swing.GroupLayout(cq_beaconPanel);
        cq_beaconPanel.setLayout(cq_beaconPanelLayout);
        cq_beaconPanelLayout.setHorizontalGroup(
            cq_beaconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cq_beaconPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cq_beaconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(cq_beaconPanelLayout.createSequentialGroup()
                        .addComponent(quickcq_image, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chooseCQimgButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(cqQUICKsettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(autoiAPRSstatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cq_beaconPanelLayout.setVerticalGroup(
            cq_beaconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cq_beaconPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cq_beaconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quickcq_image)
                    .addComponent(chooseCQimgButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cq_beaconPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cqQUICKsettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cq_beaconPanelLayout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(autoiAPRSstatus)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tximgPane.addTab("CQ and Beacon", cq_beaconPanel);

        txImgList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txImgList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item1", "Item2", "Item3" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        txImgList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        txImgList.setAutoscrolls(false);
        txImgList.setFixedCellHeight(207);
        txImgList.setFixedCellWidth(290);
        txImgList.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        txImgList.setVerifyInputWhenFocusTarget(false);
        txImgList.setVisibleRowCount(2);
        txImgList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                txImgListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(txImgList);

        jProgressBar1.setValue(25);
        jProgressBar1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "TX-Progress"));
        jProgressBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jProgressBar1.setFocusable(false);
        jProgressBar1.setName(""); // NOI18N

        abortTXbutton.setText("abort");

        TXModeList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        TXModeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, RXmodeList, org.jdesktop.beansbinding.ELProperty.create("${selectedElement}"), TXModeList, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, TXModeList, org.jdesktop.beansbinding.ELProperty.create("${selectedIndices}"), TXModeList, org.jdesktop.beansbinding.BeanProperty.create("selectedIndices"));
        bindingGroup.addBinding(binding);

        TXModeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                TXModeListValueChanged(evt);
            }
        });
        jScrollPane10.setViewportView(TXModeList);

        mainTXButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        mainTXButton.setText("TX");

        addStockButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jssdv/photo-add-icon.png"))); // NOI18N
        addStockButton.setToolTipText("add image");
        addStockButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addStockButtonMouseClicked(evt);
            }
        });
        addStockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStockButtonActionPerformed(evt);
            }
        });

        mainModemselector.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        mainModemselector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        mainEncSelector.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        mainEncSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout txPanelLayout = new javax.swing.GroupLayout(txPanel);
        txPanel.setLayout(txPanelLayout);
        txPanelLayout.setHorizontalGroup(
            txPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(txPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(mainTXButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mainModemselector, 0, 161, Short.MAX_VALUE)
                            .addComponent(mainEncSelector, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(addStockButton)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(tximgPane, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(txPanelLayout.createSequentialGroup()
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 827, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(abortTXbutton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        txPanelLayout.setVerticalGroup(
            txPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txPanelLayout.createSequentialGroup()
                .addGroup(txPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tximgPane, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(txPanelLayout.createSequentialGroup()
                        .addGroup(txPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(txPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addStockButton))
                            .addGroup(txPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(mainTXButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mainModemselector, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mainEncSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(75, 75, 75)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(txPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(abortTXbutton))
                .addContainerGap())
        );

        topPane.addTab("TX                                             .", new javax.swing.ImageIcon(getClass().getResource("/jssdv/box-out.png")), txPanel); // NOI18N

        settingsPanel.setMinimumSize(new java.awt.Dimension(150, 0));

        settingsmenuPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        settingsmenuPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        settingsmenuPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        settingsmenuPane.setAutoscrolls(true);

        settings_fldigiPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        settings_fldigidefaulthost.setText("127.0.0.1");
        settings_fldigidefaulthost.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "default host:"));
        settings_fldigidefaulthost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_fldigidefaulthostActionPerformed(evt);
            }
        });

        settings_fldigidefaultport.setText("7362");
        settings_fldigidefaultport.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "default Port:"));
        settings_fldigidefaultport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_fldigidefaultportActionPerformed(evt);
            }
        });

        settings_editdefaultfldigi.setText("edit");
        settings_editdefaultfldigi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                settings_editdefaultfldigiItemStateChanged(evt);
            }
        });

        aprsBEACONQUICKsettings.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setText("every");

        settings_autoAPRS_fldigibeacon.setText("auto send APRS-Beacons with FLDIGI");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, settings_fldigibeaconinterval, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), settings_autoAPRS_fldigibeacon, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        jLabel8.setText("minutes");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, settings_fldigibeaconinterval, org.jdesktop.beansbinding.ELProperty.create("${value}"), fldigiAPRSintervalLabel, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        settings_fldigibeaconinterval.setMajorTickSpacing(15);
        settings_fldigibeaconinterval.setMaximum(120);
        settings_fldigibeaconinterval.setMinimum(1);
        settings_fldigibeaconinterval.setMinorTickSpacing(5);
        settings_fldigibeaconinterval.setPaintLabels(true);
        settings_fldigibeaconinterval.setPaintTicks(true);
        settings_fldigibeaconinterval.setValue(1);
        settings_fldigibeaconinterval.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Interval (Minutes)"));

        javax.swing.GroupLayout aprsBEACONQUICKsettingsLayout = new javax.swing.GroupLayout(aprsBEACONQUICKsettings);
        aprsBEACONQUICKsettings.setLayout(aprsBEACONQUICKsettingsLayout);
        aprsBEACONQUICKsettingsLayout.setHorizontalGroup(
            aprsBEACONQUICKsettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aprsBEACONQUICKsettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(settings_autoAPRS_fldigibeacon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fldigiAPRSintervalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addContainerGap(64, Short.MAX_VALUE))
            .addGroup(aprsBEACONQUICKsettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(aprsBEACONQUICKsettingsLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(settings_fldigibeaconinterval, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(30, Short.MAX_VALUE)))
        );
        aprsBEACONQUICKsettingsLayout.setVerticalGroup(
            aprsBEACONQUICKsettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aprsBEACONQUICKsettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aprsBEACONQUICKsettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fldigiAPRSintervalLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(aprsBEACONQUICKsettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(settings_autoAPRS_fldigibeacon)
                        .addComponent(jLabel6)
                        .addComponent(jLabel8)))
                .addContainerGap(83, Short.MAX_VALUE))
            .addGroup(aprsBEACONQUICKsettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(aprsBEACONQUICKsettingsLayout.createSequentialGroup()
                    .addGap(37, 37, 37)
                    .addComponent(settings_fldigibeaconinterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(14, Short.MAX_VALUE)))
        );

        settings_fldigi_spotting.setText("Spotting @ pskreporter.info ");
        settings_fldigi_spotting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jssdv/switch-off.png"))); // NOI18N
        settings_fldigi_spotting.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/jssdv/switch-on.png"))); // NOI18N
        settings_fldigi_spotting.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                settings_fldigi_spottingStateChanged(evt);
            }
        });

        settings_fldigi_interval.setMajorTickSpacing(100);
        settings_fldigi_interval.setMaximum(500);
        settings_fldigi_interval.setMinimum(200);
        settings_fldigi_interval.setMinorTickSpacing(50);
        settings_fldigi_interval.setPaintLabels(true);
        settings_fldigi_interval.setPaintTicks(true);
        settings_fldigi_interval.setSnapToTicks(true);
        settings_fldigi_interval.setValue(300);
        settings_fldigi_interval.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Request interval"));

        autostart_fldigi.setText("Auto start fldigi on prog. start");

        autoconnect_fldigi.setText("Auto connect fldigi on prog. start");

        javax.swing.GroupLayout settings_fldigiPanelLayout = new javax.swing.GroupLayout(settings_fldigiPanel);
        settings_fldigiPanel.setLayout(settings_fldigiPanelLayout);
        settings_fldigiPanelLayout.setHorizontalGroup(
            settings_fldigiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_fldigiPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settings_fldigiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(settings_fldigi_spotting)
                    .addGroup(settings_fldigiPanelLayout.createSequentialGroup()
                        .addComponent(settings_fldigidefaulthost, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(settings_fldigidefaultport, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(settings_editdefaultfldigi))
                    .addGroup(settings_fldigiPanelLayout.createSequentialGroup()
                        .addComponent(aprsBEACONQUICKsettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(autostart_fldigi))
                    .addComponent(settings_fldigi_interval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(settings_fldigiPanelLayout.createSequentialGroup()
                        .addGap(392, 392, 392)
                        .addComponent(autoconnect_fldigi)))
                .addContainerGap(401, Short.MAX_VALUE))
        );
        settings_fldigiPanelLayout.setVerticalGroup(
            settings_fldigiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_fldigiPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settings_fldigiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settings_fldigidefaulthost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settings_fldigidefaultport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settings_editdefaultfldigi))
                .addGap(18, 18, 18)
                .addGroup(settings_fldigiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(aprsBEACONQUICKsettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(settings_fldigiPanelLayout.createSequentialGroup()
                        .addComponent(autostart_fldigi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(autoconnect_fldigi)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(settings_fldigi_spotting)
                .addGap(18, 18, 18)
                .addComponent(settings_fldigi_interval, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(249, Short.MAX_VALUE))
        );

        settingsmenuPane.addTab("FLDIGI", new javax.swing.ImageIcon(getClass().getResource("/jssdv/monitor.png")), settings_fldigiPanel); // NOI18N

        settings_aprsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        settings_iAPRSserver.setText("127.0.0.1");
        settings_iAPRSserver.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "iAPRS-host:"));
        settings_iAPRSserver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_iAPRSserverActionPerformed(evt);
            }
        });

        settings_iAPRSport.setText("7362");
        settings_iAPRSport.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Port:"));
        settings_iAPRSport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_iAPRSportActionPerformed(evt);
            }
        });

        settings_editdefaultfldigi1.setText("edit");
        settings_editdefaultfldigi1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                settings_editdefaultfldigi1ItemStateChanged(evt);
            }
        });
        settings_editdefaultfldigi1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                settings_editdefaultfldigi1StateChanged(evt);
            }
        });

        settings_iAPRSpassword.setText("127.0.0.1");
        settings_iAPRSpassword.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Password"));
        settings_iAPRSpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_iAPRSpasswordActionPerformed(evt);
            }
        });

        settings_iAPRSport1.setText("7362");
        settings_iAPRSport1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filter"));
        settings_iAPRSport1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_iAPRSport1ActionPerformed(evt);
            }
        });

        iAPRSfeedbackRX.setText("Send feedback during RX");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 187, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout settings_aprsPanelLayout = new javax.swing.GroupLayout(settings_aprsPanel);
        settings_aprsPanel.setLayout(settings_aprsPanelLayout);
        settings_aprsPanelLayout.setHorizontalGroup(
            settings_aprsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_aprsPanelLayout.createSequentialGroup()
                .addGroup(settings_aprsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(settings_iAPRSport1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(settings_aprsPanelLayout.createSequentialGroup()
                        .addGroup(settings_aprsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settings_aprsPanelLayout.createSequentialGroup()
                                .addComponent(settings_iAPRSserver, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settings_aprsPanelLayout.createSequentialGroup()
                                .addComponent(settings_iAPRSpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98)))
                        .addGroup(settings_aprsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(settings_editdefaultfldigi1)
                            .addComponent(settings_iAPRSport, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(settings_aprsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iAPRSfeedbackRX)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 371, Short.MAX_VALUE))
        );
        settings_aprsPanelLayout.setVerticalGroup(
            settings_aprsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_aprsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settings_aprsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settings_iAPRSserver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settings_iAPRSport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iAPRSfeedbackRX))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settings_aprsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(settings_aprsPanelLayout.createSequentialGroup()
                        .addGroup(settings_aprsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(settings_iAPRSpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(settings_editdefaultfldigi1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(settings_iAPRSport1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(429, Short.MAX_VALUE))
        );

        settingsmenuPane.addTab("APRS", new javax.swing.ImageIcon(getClass().getResource("/jssdv/globe.png")), settings_aprsPanel); // NOI18N

        settings_modesPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Carrier"));

        jList2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Supported by Modem"));
        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jList2);

        jList3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Favorites"));
        jList3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(jList3);

        jButton7.setText("add favorite");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
            .addComponent(jScrollPane5)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jButton7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Payload"));

        jScrollPane6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "known Modes"));

        jList4.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(jList4);

        jButton8.setText("edit");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("add");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("delete");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Save TXed image");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jCheckBox1)
                .addGap(112, 112, 112)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(245, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10))
                    .addComponent(jCheckBox1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout settings_modesPanelLayout = new javax.swing.GroupLayout(settings_modesPanel);
        settings_modesPanel.setLayout(settings_modesPanelLayout);
        settings_modesPanelLayout.setHorizontalGroup(
            settings_modesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        settings_modesPanelLayout.setVerticalGroup(
            settings_modesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_modesPanelLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        settingsmenuPane.addTab("Modes", new javax.swing.ImageIcon(getClass().getResource("/jssdv/folder-picture.png")), settings_modesPanel); // NOI18N

        settings_directoryPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        settings_main_dir.setEditable(false);
        settings_main_dir.setText("C:\\Users\\User\\Documents\\jSSDV");
        settings_main_dir.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Program Main Folder"));

        mainfolderselect.setText("select");
        mainfolderselect.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mainfolderselect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mainfolderselectMouseClicked(evt);
            }
        });

        settings_dir_txstockdir.setEditable(false);
        settings_dir_txstockdir.setText("C:\\Users\\User\\Documents\\jSSDV\\tx-stock");
        settings_dir_txstockdir.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "TX-Stock"));

        txstockfolderselect.setText("select");
        txstockfolderselect.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txstockfolderselect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txstockfolderselectMouseClicked(evt);
            }
        });

        settings_dirs_rxdir.setEditable(false);
        settings_dirs_rxdir.setText("C:\\Users\\User\\Documents\\jSSDV\\rx");
        settings_dirs_rxdir.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "RX-Images"));
        settings_dirs_rxdir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settings_dirs_rxdirActionPerformed(evt);
            }
        });

        rximagesfolderselect.setText("select");
        rximagesfolderselect.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        rximagesfolderselect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rximagesfolderselectMouseClicked(evt);
            }
        });

        txlogdir.setEditable(false);
        txlogdir.setText("C:\\Users\\User\\Documents\\jSSDV\\tx-log");
        txlogdir.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "TX-Log Dir"));
        txlogdir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txlogdirActionPerformed(evt);
            }
        });

        txlogdirselect.setText("select");
        txlogdirselect.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txlogdirselect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txlogdirselectMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout settings_directoryPanelLayout = new javax.swing.GroupLayout(settings_directoryPanel);
        settings_directoryPanel.setLayout(settings_directoryPanelLayout);
        settings_directoryPanelLayout.setHorizontalGroup(
            settings_directoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_directoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settings_directoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(settings_directoryPanelLayout.createSequentialGroup()
                        .addComponent(settings_main_dir, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainfolderselect, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(settings_directoryPanelLayout.createSequentialGroup()
                        .addComponent(settings_dir_txstockdir, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txstockfolderselect, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(settings_directoryPanelLayout.createSequentialGroup()
                        .addComponent(settings_dirs_rxdir, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rximagesfolderselect, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(settings_directoryPanelLayout.createSequentialGroup()
                        .addComponent(txlogdir, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txlogdirselect, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        settings_directoryPanelLayout.setVerticalGroup(
            settings_directoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settings_directoryPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(settings_directoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settings_main_dir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainfolderselect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settings_directoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settings_dir_txstockdir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txstockfolderselect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(settings_directoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settings_dirs_rxdir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rximagesfolderselect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settings_directoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txlogdir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txlogdirselect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(378, 378, 378))
        );

        settingsmenuPane.addTab("Directories", new javax.swing.ImageIcon(getClass().getResource("/jssdv/folder.png")), settings_directoryPanel); // NOI18N

        settings_freq_table.setAutoCreateRowSorter(true);
        settings_freq_table.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        settings_freq_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane8.setViewportView(settings_freq_table);

        javax.swing.GroupLayout settings_freqPanelLayout = new javax.swing.GroupLayout(settings_freqPanel);
        settings_freqPanel.setLayout(settings_freqPanelLayout);
        settings_freqPanelLayout.setHorizontalGroup(
            settings_freqPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_freqPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 540, Short.MAX_VALUE))
        );
        settings_freqPanelLayout.setVerticalGroup(
            settings_freqPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_freqPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 184, Short.MAX_VALUE))
        );

        settingsmenuPane.addTab("Frequencies", new javax.swing.ImageIcon(getClass().getResource("/jssdv/file-text.png")), settings_freqPanel); // NOI18N

        autolog.setText("auto create log-entry in FLDIGI when image is received");
        autolog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autologActionPerformed(evt);
            }
        });

        autoimagesave.setText("auto save image on reception");
        autoimagesave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoimagesaveActionPerformed(evt);
            }
        });

        imagesaveformat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PNG", "JPG", "GIF", "JP2" }));

        jLabel3.setText("Image Format");

        rxautomin.setMajorTickSpacing(25);
        rxautomin.setMinorTickSpacing(10);
        rxautomin.setPaintLabels(true);
        rxautomin.setPaintTicks(true);
        rxautomin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, rxautomin, org.jdesktop.beansbinding.ELProperty.create("${value}"), jTextField5, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout settings_loggingLayout = new javax.swing.GroupLayout(settings_logging);
        settings_logging.setLayout(settings_loggingLayout);
        settings_loggingLayout.setHorizontalGroup(
            settings_loggingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_loggingLayout.createSequentialGroup()
                .addGroup(settings_loggingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(settings_loggingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(settings_loggingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(autoimagesave, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(settings_loggingLayout.createSequentialGroup()
                                .addComponent(autolog, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rxautomin, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(settings_loggingLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(imagesaveformat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(261, Short.MAX_VALUE))
        );
        settings_loggingLayout.setVerticalGroup(
            settings_loggingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settings_loggingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settings_loggingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(settings_loggingLayout.createSequentialGroup()
                        .addGroup(settings_loggingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(autolog)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(autoimagesave))
                    .addComponent(rxautomin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(settings_loggingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imagesaveformat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(503, Short.MAX_VALUE))
        );

        settingsmenuPane.addTab("Logging", new javax.swing.ImageIcon(getClass().getResource("/jssdv/tag.png")), settings_logging); // NOI18N

        settings_imgprocessing.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout settings_imgprocessingLayout = new javax.swing.GroupLayout(settings_imgprocessing);
        settings_imgprocessing.setLayout(settings_imgprocessingLayout);
        settings_imgprocessingLayout.setHorizontalGroup(
            settings_imgprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 988, Short.MAX_VALUE)
        );
        settings_imgprocessingLayout.setVerticalGroup(
            settings_imgprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 582, Short.MAX_VALUE)
        );

        settingsmenuPane.addTab("Img. processing", new javax.swing.ImageIcon(getClass().getResource("/jssdv/file-picture.png")), settings_imgprocessing); // NOI18N

        savesettings.setText("Save Settings");

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(settingsmenuPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1121, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(savesettings)
                .addGap(102, 102, 102))
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addComponent(settingsmenuPane, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 289, Short.MAX_VALUE)
                .addComponent(savesettings)
                .addContainerGap())
        );

        topPane.addTab("Settings                     .", new javax.swing.ImageIcon(getClass().getResource("/jssdv/cogs.png")), settingsPanel); // NOI18N

        debugtext.setText("jTextField1");

        rxQ.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "RX-Q"));

        rxQ1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "TX-Q"));

        javax.swing.GroupLayout debugPanelLayout = new javax.swing.GroupLayout(debugPanel);
        debugPanel.setLayout(debugPanelLayout);
        debugPanelLayout.setHorizontalGroup(
            debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(debugPanelLayout.createSequentialGroup()
                .addGroup(debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(debugPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(debugtext, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(rxQ, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(debugPanelLayout.createSequentialGroup()
                        .addGap(357, 357, 357)
                        .addComponent(rxQ1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(459, Short.MAX_VALUE))
        );
        debugPanelLayout.setVerticalGroup(
            debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(debugPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(debugPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(debugPanelLayout.createSequentialGroup()
                        .addComponent(rxQ, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rxQ1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(debugtext, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE))
                .addContainerGap())
        );

        topPane.addTab("debug", debugPanel);

        getContentPane().add(topPane);

        sidePane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        sidePane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        sidePane.setOpaque(true);

        fldigiPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        main_fldigiport.setText("7362");
        main_fldigiport.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Port:"));
        main_fldigiport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main_fldigiportActionPerformed(evt);
            }
        });

        fldigi_connectButton.setText("connect");
        fldigi_connectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fldigi_connectButtonMouseClicked(evt);
            }
        });
        fldigi_connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fldigi_connectButtonActionPerformed(evt);
            }
        });

        main_fldigihost.setText("127.0.0.1");
        main_fldigihost.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()), "FLDIGI-Host:"));
        main_fldigihost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                main_fldigihostActionPerformed(evt);
            }
        });

        fldigisetdefaultButton.setText("default");
        fldigisetdefaultButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fldigisetdefaultButtonMouseClicked(evt);
            }
        });
        fldigisetdefaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fldigisetdefaultButtonActionPerformed(evt);
            }
        });

        iAPRSPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        fldigiport1.setText("7362");
        fldigiport1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Port:"));
        fldigiport1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fldigiport1ActionPerformed(evt);
            }
        });

        iAPRS_connectButton.setText("connect");
        iAPRS_connectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iAPRS_connectButtonMouseClicked(evt);
            }
        });
        iAPRS_connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iAPRS_connectButtonActionPerformed(evt);
            }
        });

        iAPRSsetdefaultButton.setText("default");
        iAPRSsetdefaultButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iAPRSsetdefaultButtonMouseClicked(evt);
            }
        });
        iAPRSsetdefaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iAPRSsetdefaultButtonActionPerformed(evt);
            }
        });

        fldigihost1.setText("127.0.0.1");
        fldigihost1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()), "iAPRS-Host:"));
        fldigihost1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fldigihost1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout iAPRSPanelLayout = new javax.swing.GroupLayout(iAPRSPanel);
        iAPRSPanel.setLayout(iAPRSPanelLayout);
        iAPRSPanelLayout.setHorizontalGroup(
            iAPRSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iAPRSPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(iAPRSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(iAPRSPanelLayout.createSequentialGroup()
                        .addComponent(fldigiport1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(iAPRSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(iAPRS_connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iAPRSsetdefaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(fldigihost1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        iAPRSPanelLayout.setVerticalGroup(
            iAPRSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iAPRSPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fldigihost1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(iAPRSPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fldigiport1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(iAPRSPanelLayout.createSequentialGroup()
                        .addComponent(iAPRS_connectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iAPRSsetdefaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout fldigiPanelLayout = new javax.swing.GroupLayout(fldigiPanel);
        fldigiPanel.setLayout(fldigiPanelLayout);
        fldigiPanelLayout.setHorizontalGroup(
            fldigiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fldigiPanelLayout.createSequentialGroup()
                .addGroup(fldigiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fldigiPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(fldigiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fldigiPanelLayout.createSequentialGroup()
                                .addComponent(main_fldigiport, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addGroup(fldigiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(fldigi_connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fldigisetdefaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(main_fldigihost, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(iAPRSPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        fldigiPanelLayout.setVerticalGroup(
            fldigiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fldigiPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(main_fldigihost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(fldigiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(main_fldigiport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(fldigiPanelLayout.createSequentialGroup()
                        .addComponent(fldigi_connectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldigisetdefaultButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(iAPRSPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout connections_settingsPanelLayout = new javax.swing.GroupLayout(connections_settingsPanel);
        connections_settingsPanel.setLayout(connections_settingsPanelLayout);
        connections_settingsPanelLayout.setHorizontalGroup(
            connections_settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(connections_settingsPanelLayout.createSequentialGroup()
                .addComponent(fldigiPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 49, Short.MAX_VALUE))
        );
        connections_settingsPanelLayout.setVerticalGroup(
            connections_settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(connections_settingsPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(fldigiPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(590, Short.MAX_VALUE))
        );

        sidePane.addTab("Connections", new javax.swing.ImageIcon(getClass().getResource("/jssdv/monitor.png")), connections_settingsPanel); // NOI18N

        QRG.setText("qrg");

        rxidButton.setLabel("RXID");

        txidButton.setLabel("TXID");

        jList5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "QSY"));
        jList5.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane7.setViewportView(jList5);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Dial"));

        qrgMHz.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        qrgMHz.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        qrgMHz.setText("124");
        qrgMHz.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "MHz"));
        qrgMHz.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                qrgMHzMouseWheelMoved(evt);
            }
        });

        jScrollBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, qrgMHz, org.jdesktop.beansbinding.ELProperty.create("${text}"), jScrollBar1, org.jdesktop.beansbinding.BeanProperty.create("unitIncrement"));
        bindingGroup.addBinding(binding);

        jScrollBar1.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                jScrollBar1AdjustmentValueChanged(evt);
            }
        });

        qrgkHz.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        qrgkHz.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        qrgkHz.setText("124");
        qrgkHz.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "kHz"));
        qrgkHz.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                qrgkHzMouseWheelMoved(evt);
            }
        });

        qrgHz.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        qrgHz.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        qrgHz.setText("124");
        qrgHz.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Hz"));
        qrgHz.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                qrgHzMouseWheelMoved(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(qrgMHz, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(qrgkHz, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(qrgHz, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(qrgkHz)
                    .addComponent(jScrollBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(qrgMHz)
                    .addComponent(jScrollBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(qrgHz)
                .addComponent(jScrollBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tuneButton.setText("Tune");
        tuneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tuneButtonActionPerformed(evt);
            }
        });

        qaddebug.setText("jTextField6");

        digisquelch.setMajorTickSpacing(20);
        digisquelch.setMinimum(1);
        digisquelch.setMinorTickSpacing(10);
        digisquelch.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Digi-Squelch"));
        digisquelch.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                digisquelchStateChanged(evt);
            }
        });

        digisquelchswitch.setText(" ");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, digisquelch, org.jdesktop.beansbinding.ELProperty.create("${enabled}"), digisquelchswitch, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        digisquelchswitch.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                digisquelchswitchStateChanged(evt);
            }
        });
        digisquelchswitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                digisquelchswitchActionPerformed(evt);
            }
        });

        CarrierCenter.setMajorTickSpacing(500);
        CarrierCenter.setMaximum(2000);
        CarrierCenter.setMinimum(500);
        CarrierCenter.setMinorTickSpacing(250);
        CarrierCenter.setPaintLabels(true);
        CarrierCenter.setPaintTicks(true);
        CarrierCenter.setToolTipText("");
        CarrierCenter.setValue(1500);
        CarrierCenter.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "ModemCarrier (Hz)"));
        CarrierCenter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                CarrierCenterMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout rigPanelLayout = new javax.swing.GroupLayout(rigPanel);
        rigPanel.setLayout(rigPanelLayout);
        rigPanelLayout.setHorizontalGroup(
            rigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rigPanelLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 126, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rigPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(rigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txidButton)
                    .addComponent(rxidButton))
                .addGap(117, 117, 117))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rigPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CarrierCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tuneButton, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, rigPanelLayout.createSequentialGroup()
                        .addComponent(digisquelchswitch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(rigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(rigPanelLayout.createSequentialGroup()
                                .addGroup(rigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(QRG, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(qaddebug, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(digisquelch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SigQual, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))))
                .addContainerGap())
        );
        rigPanelLayout.setVerticalGroup(
            rigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rigPanelLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tuneButton)
                .addGap(14, 14, 14)
                .addComponent(CarrierCenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(digisquelch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(digisquelchswitch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SigQual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(QRG, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(qaddebug, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(txidButton)
                .addGap(37, 37, 37)
                .addComponent(rxidButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        sidePane.addTab("RIG", new javax.swing.ImageIcon(getClass().getResource("/jssdv/radio.png")), rigPanel); // NOI18N

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jTextField1.setText("jTextField1");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setText("jButton2");

        jScrollPane3.setViewportView(jTree1);

        javax.swing.GroupLayout sidetalkPanelLayout = new javax.swing.GroupLayout(sidetalkPanel);
        sidetalkPanel.setLayout(sidetalkPanelLayout);
        sidetalkPanelLayout.setHorizontalGroup(
            sidetalkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidetalkPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(sidetalkPanelLayout.createSequentialGroup()
                .addGroup(sidetalkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(sidetalkPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sidetalkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        sidetalkPanelLayout.setVerticalGroup(
            sidetalkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidetalkPanelLayout.createSequentialGroup()
                .addGroup(sidetalkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidetalkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(0, 469, Short.MAX_VALUE))
        );

        sidePane.addTab("Sidetalk                             .", new javax.swing.ImageIcon(getClass().getResource("/jssdv/bubbles.png")), sidetalkPanel); // NOI18N

        getContentPane().add(sidePane);
        sidePane.getAccessibleContext().setAccessibleName("RIG");
        sidePane.getAccessibleContext().setAccessibleDescription("");

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void main_fldigihostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main_fldigihostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_main_fldigihostActionPerformed

    private void main_fldigiportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_main_fldigiportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_main_fldigiportActionPerformed

    private void fldigi_connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fldigi_connectButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fldigi_connectButtonActionPerformed

    private void fldigisetdefaultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fldigisetdefaultButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fldigisetdefaultButtonActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void mainfolderselectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainfolderselectMouseClicked
        JFileChooser chooser = new JFileChooser("");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog((java.awt.Component) null);
        
        if (returnVal == chooser.APPROVE_OPTION) {
            
            java.io.File inFile = chooser.getSelectedFile();
            String dirname = inFile.getAbsoluteFile().toString();
            settings_main_dir.setText(dirname);
            //    processFile(inFile); 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_mainfolderselectMouseClicked

    private void txstockfolderselectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txstockfolderselectMouseClicked
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser("");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog((java.awt.Component) null);
        
        if (returnVal == chooser.APPROVE_OPTION) {
            
            java.io.File inFile = chooser.getSelectedFile();
            String dirname = inFile.getAbsoluteFile().toString();
            settings_dir_txstockdir.setText(dirname);
            //    processFile(inFile); 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txstockfolderselectMouseClicked

    private void rximagesfolderselectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rximagesfolderselectMouseClicked
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser("");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog((java.awt.Component) null);
        
        if (returnVal == chooser.APPROVE_OPTION) {
            
            java.io.File inFile = chooser.getSelectedFile();
            String dirname = inFile.getAbsoluteFile().toString();
            settings_dirs_rxdir.setText(dirname);
            //    processFile(inFile); 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_rximagesfolderselectMouseClicked

    private void txlogdirselectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txlogdirselectMouseClicked
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser("");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog((java.awt.Component) null);
        
        if (returnVal == chooser.APPROVE_OPTION) {
            
            java.io.File inFile = chooser.getSelectedFile();
            String dirname = inFile.getAbsoluteFile().toString();
            txlogdir.setText(dirname);
            //    processFile(inFile); 
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txlogdirselectMouseClicked

    private void settings_dirs_rxdirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_dirs_rxdirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settings_dirs_rxdirActionPerformed
    

    private void fldigi_connectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fldigi_connectButtonMouseClicked
        // TODO add your handling code here: "http://localhost:7362/"

//        Rigctl fldigi = new connector.Rigctl();
        //       String sethost = main_fldigihost.getText();
        //       int setport = Integer.getInteger(main_fldigiport.getText());
        // connector.Rigctl.config(sethost, setport);
        //  connector.Rigctl.config(main_fldigihost.getText(), Integer.getInteger(main_fldigiport.getText()));
        connector.Rigctl.Rigctl();
        QRG.setText(connector.Rigctl.Getfreq());
        qrgHz.setText(QRG.getText().substring(5, 8));
        qrgkHz.setText(QRG.getText().substring(2, 5));
        qrgMHz.setText(QRG.getText().substring(0, 2));
//    int sq = connector.Rigctl.GetQual();
//    System.out.println(sq);

        // SigQual.setValue(sq);
        rxModemset.setText(connector.Rigctl.GetModem());
        //  fldigiconnector.Rigctl.SetMaster();

        connector.Rigctl.SetSpotting(settings_fldigi_spotting.isSelected());
        connector.Rigctl.SetRxID(rxenableRSID.isSelected());
        // connector.Rigctl.SetSQL(digisquelchswitch.isSelected());        // TODO add your handling code here:

        //  qaddebug.setText(fldigiconnector.Rigctl.SetSQL().toString());
        final ScheduledExecutorService ses = Executors.newSingleThreadScheduledExecutor();
        ses.scheduleWithFixedDelay(new Runnable() {
            @Override
            public void run() {
                
                rxModemset.setText(connector.Rigctl.GetModem());
                //  String rxdata = connector.Rigctl.GetRxData();
                //  rxQ.setText(rxQ.getText()+rxdata);
                //  System.out.println(rxdata);
                //System.out.println("Test");
                CarrierCenter.setValue(connector.Rigctl.GetCenter());
                SigQual.setValue(connector.Rigctl.GetQual());
                SignalLevel.setValue(SigQual.getValue());
                //System.out.println(connector.Rigctl.GetQual());
            }
        }, 0, settings_fldigi_interval.getValue(), TimeUnit.MILLISECONDS);
        
        if (settings_autoAPRS_fldigibeacon.isSelected()) {
            final ScheduledExecutorService fldigibeacon = Executors.newSingleThreadScheduledExecutor();
            fldigibeacon.scheduleWithFixedDelay(new Runnable() {
                @Override
                public void run() {
                    System.out.println("Beacon sent.");
                    String beacontext = "Test^r";
                    //     connector.Rigctl.TXBeacon(beacontext, "PSK500R");
                }
            }, 0, settings_fldigibeaconinterval.getValue(), TimeUnit.MINUTES);
            
        }
        

    }//GEN-LAST:event_fldigi_connectButtonMouseClicked

    private void settings_fldigidefaulthostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_fldigidefaulthostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settings_fldigidefaulthostActionPerformed

    private void settings_fldigidefaultportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_fldigidefaultportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settings_fldigidefaultportActionPerformed

    private void settings_editdefaultfldigiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_settings_editdefaultfldigiItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_settings_editdefaultfldigiItemStateChanged

    private void fldigisetdefaultButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fldigisetdefaultButtonMouseClicked
        main_fldigihost.setText(settings_fldigidefaulthost.getText());
        main_fldigiport.setText(settings_fldigidefaultport.getText());    // TODO add your handling code here:
    }//GEN-LAST:event_fldigisetdefaultButtonMouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void txlogdirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txlogdirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txlogdirActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void autologActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autologActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_autologActionPerformed

    private void fldigihost1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fldigihost1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fldigihost1ActionPerformed

    private void fldigiport1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fldigiport1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fldigiport1ActionPerformed

    private void iAPRS_connectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iAPRS_connectButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iAPRS_connectButtonMouseClicked

    private void iAPRS_connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iAPRS_connectButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iAPRS_connectButtonActionPerformed

    private void iAPRSsetdefaultButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iAPRSsetdefaultButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iAPRSsetdefaultButtonMouseClicked

    private void iAPRSsetdefaultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iAPRSsetdefaultButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iAPRSsetdefaultButtonActionPerformed

    private void autoimagesaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoimagesaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_autoimagesaveActionPerformed

    private void qsorunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qsorunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qsorunActionPerformed

    private void tuneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tuneButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tuneButtonActionPerformed

    private void qrgkHzMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_qrgkHzMouseWheelMoved
        // TODO add your handling code here:
        int notches = evt.getWheelRotation();
        int newvalue = 0;
        String oldvalue = qrgkHz.getText();
        if (notches < 0) {
            
            newvalue = Integer.parseInt(oldvalue) + 1;
            if (newvalue == 1000) {
                
                newvalue = 0;
            }
            
        } else {
            newvalue = Integer.parseInt(oldvalue) - 1;
            if (newvalue < 0) {
                newvalue = 0;
            }
        }
        
        qrgkHz.setText(Integer.toString(newvalue));
        int frequ = Integer.parseInt(qrgHz.getText());
        frequ += Integer.parseInt(qrgkHz.getText()) * 1000;
        frequ += Integer.parseInt(qrgMHz.getText()) * 1000000;
        connector.Rigctl.Setfreq(Integer.toString(frequ));
        QRG.setText(Integer.toString(frequ));
    }//GEN-LAST:event_qrgkHzMouseWheelMoved

    private void digisquelchStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_digisquelchStateChanged
        // TODO add your handling code here:
        connector.Rigctl.SetSql(digisquelch.getValue());
    }//GEN-LAST:event_digisquelchStateChanged

    private void jScrollBar1AdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_jScrollBar1AdjustmentValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollBar1AdjustmentValueChanged

    private void digisquelchswitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_digisquelchswitchActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_digisquelchswitchActionPerformed

    private void qrgHzMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_qrgHzMouseWheelMoved
        int notches = evt.getWheelRotation();
        int newvalue = 0;
        String oldvalue = qrgHz.getText();
        if (notches < 0) {
            
            newvalue = Integer.parseInt(oldvalue) + 1;
            
        } else {
            newvalue = Integer.parseInt(oldvalue) - 1;
        }
        
        qrgHz.setText(Integer.toString(newvalue));
        int frequ = Integer.parseInt(qrgHz.getText());
        frequ += Integer.parseInt(qrgkHz.getText()) * 1000;
        frequ += Integer.parseInt(qrgMHz.getText()) * 1000000;
        connector.Rigctl.Setfreq(Integer.toString(frequ));
        QRG.setText(Integer.toString(frequ));

// TODO add your handling code here:
    }//GEN-LAST:event_qrgHzMouseWheelMoved
    

    private void qrgMHzMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_qrgMHzMouseWheelMoved
        int notches = evt.getWheelRotation();
        int newvalue = 0;
        String oldvalue = qrgMHz.getText();
        if (notches < 0) {
            
            newvalue = Integer.parseInt(oldvalue) + 1;
            
        } else {
            newvalue = Integer.parseInt(oldvalue) - 1;
        }
        
        qrgMHz.setText(Integer.toString(newvalue));
        int frequ = Integer.parseInt(qrgHz.getText());
        frequ += Integer.parseInt(qrgkHz.getText()) * 1000;
        frequ += Integer.parseInt(qrgMHz.getText()) * 1000000;
        //   fldigiconnector.Rigctl.Setfreq(Integer.toString(frequ));
        QRG.setText(Integer.toString(frequ));// TODO add your handling code here:
    }//GEN-LAST:event_qrgMHzMouseWheelMoved

    private void settings_iAPRSport1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_iAPRSport1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settings_iAPRSport1ActionPerformed

    private void settings_iAPRSpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_iAPRSpasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settings_iAPRSpasswordActionPerformed

    private void settings_editdefaultfldigi1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_settings_editdefaultfldigi1StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_settings_editdefaultfldigi1StateChanged

    private void settings_editdefaultfldigi1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_settings_editdefaultfldigi1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_settings_editdefaultfldigi1ItemStateChanged

    private void settings_iAPRSportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_iAPRSportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settings_iAPRSportActionPerformed

    private void settings_iAPRSserverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settings_iAPRSserverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_settings_iAPRSserverActionPerformed

    private void settings_fldigi_spottingStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_settings_fldigi_spottingStateChanged
        connector.Rigctl.SetSpotting(settings_fldigi_spotting.isSelected());

        // TODO add your handling code here:
    }//GEN-LAST:event_settings_fldigi_spottingStateChanged

    private void rxenableRSIDStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rxenableRSIDStateChanged
        connector.Rigctl.SetRxID(rxenableRSID.isSelected());   // TODO add your handling code here:
    }//GEN-LAST:event_rxenableRSIDStateChanged

    private void digisquelchswitchStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_digisquelchswitchStateChanged
        //connector.Rigctl.SetSQL(digisquelchswitch.isSelected());        // TODO add your handling code here:
    }//GEN-LAST:event_digisquelchswitchStateChanged

    private void RXmodeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_RXmodeListValueChanged
        TXModeList.setSelectedIndex(this.RXmodeList.getSelectedIndex());         // TODO add your handling code here:
    }//GEN-LAST:event_RXmodeListValueChanged

    private void TXModeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_TXModeListValueChanged
        RXmodeList.setSelectedIndex(this.TXModeList.getSelectedIndex());
        int selmode = this.TXModeList.getSelectedIndex();
        Opmode thismode = cast(myopmodes.getElementAt(selmode));
        mainModemselector.setModel(thismode.getModemsModel());
        mainEncSelector.setModel(thismode.getEncModel());
        //new thismode.getModems().split(",");
    }//GEN-LAST:event_TXModeListValueChanged

    private void chooseCQimgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseCQimgButtonActionPerformed
        int returnVal = getCQimg_Dialog.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = getCQimg_Dialog.getSelectedFile();
            try {
                // What to do with the file, e.g. display it in a TextArea
                //    debugtext.read(new FileReader(file.getAbsolutePath()), null);
                ImageIcon image = new ImageIcon(ImageIO.read(file).getScaledInstance(320, 240, java.awt.Image.SCALE_AREA_AVERAGING));

                // quickcq_image.imageUpdate(image, NORMAL, WIDTH, WIDTH, WIDTH, WIDTH);
                quickcq_image.setIcon(image);
            } catch (IOException ex) {
                System.out.println("problem accessing file" + file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        } // TODO add your handling code here:

    }//GEN-LAST:event_chooseCQimgButtonActionPerformed

    private void chooseCQimgButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseCQimgButtonMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_chooseCQimgButtonMouseClicked

    private void getCQimg(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getCQimg
        JFileChooser chooser = new JFileChooser("");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog((java.awt.Component) null);
        
        if (returnVal == chooser.APPROVE_OPTION) {
            
            java.io.File inFile = chooser.getSelectedFile();
            String dirname = inFile.getAbsoluteFile().toString();
            //txlogdir.setText(dirname);
            quickcq_image.createImage(320, 240);
            //    processFile(inFile);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_getCQimg

    private void quickcq_imageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quickcq_imageMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_quickcq_imageMouseClicked

    private void qick_choose_txImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qick_choose_txImageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qick_choose_txImageActionPerformed

    private void qick_choose_txImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_qick_choose_txImageMouseClicked
        int returnVal = getCQimg_Dialog.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = getCQimg_Dialog.getSelectedFile();
            try {
                // What to do with the file, e.g. display it in a TextArea
                //    debugtext.read(new FileReader(file.getAbsolutePath()), null);
                //  ImageIcon image = new ImageIcon(ImageIO.read(file).getScaledInstance(320, 240, java.awt.Image.SCALE_AREA_AVERAGING)) ;
                ImageIcon image = new ImageIcon(Scalr.resize(ImageIO.read(file), Scalr.Method.ULTRA_QUALITY, 320, 240));

                // quickcq_image.imageUpdate(image, NORMAL, WIDTH, WIDTH, WIDTH, WIDTH);
                tximage.setIcon(image);
            } catch (IOException ex) {
                System.out.println("problem accessing file" + file.getAbsolutePath());
            }
        } else {
            System.out.println("File access cancelled by user.");
        } // TODO add your handling code here:

        // TODO add your handling code here:
    }//GEN-LAST:event_qick_choose_txImageMouseClicked

    private void addStockButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addStockButtonMouseClicked
        File file = null;
        int returnVal = addStockFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = addStockFileChooser.getSelectedFile();
        }// TODO add your handling code here:
        String filename = file.getName();
        System.out.println(file.toString());
        JTextField username = new JTextField();
        JTextField password = new JPasswordField();
        addStockeditForm editform = new addStockeditForm();
        JLabel image = new JLabel();
        JLabel text = new JLabel();
        text.setText("Select Region");
        JTextField picname = new JTextField();
        picname.setText(filename);
        picname.setBorder(new TitledBorder("Name"));
        JTextField taglist = new JTextField();
        taglist.setBorder(new TitledBorder("Tags"));
        JTextField desc = new JTextField();
        desc.setBorder(new TitledBorder("Description"));
        MouseAdapter regsel = new RegionSelectorListener(image);
        BufferedImage img = null;
        try {
            img = ImageIO.read(file);
        } catch (IOException ex) {
            Logger.getLogger(mainform.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedImage spic = Scalr.resize(img, Scalr.Method.ULTRA_QUALITY, Scalr.Mode.BEST_FIT_BOTH, 800, 600, Scalr.OP_ANTIALIAS);
        ImageIcon icon = new ImageIcon(spic);
        image.setIcon(icon);
        Object[] message = {text, picname,
            image,taglist,desc
        };
        TXStockImage newimg = new TXStockImage();
        int option = JOptionPane.showConfirmDialog(null, message, "Login", JOptionPane.OK_CANCEL_OPTION);
        
        if (option == JOptionPane.OK_OPTION) {
            newimg.setPARENTIMG(file.toString());
            newimg.setNAME(picname.getText());
            if (taglist.getText() == "reasonable tags") {
                newimg.setTAGS("");
            } else {
                newimg.setTAGS(taglist.getText());
            }
            newimg.setDESCRIPTION(desc.getText());
            
            System.err.print(newimg.getClass().toGenericString());
        } else {
            System.err.print(newimg);
            System.err.println("Import canceled");
        }
        

    }//GEN-LAST:event_addStockButtonMouseClicked

    private void addStockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStockButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addStockButtonActionPerformed

    private void CarrierCenterMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CarrierCenterMouseReleased
        
        connector.Rigctl.SetCenter(CarrierCenter.getValue());

        // TODO add your handling code here:
    }//GEN-LAST:event_CarrierCenterMouseReleased

    private void txImgListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_txImgListValueChanged
    int modeid = txImgList.getSelectedIndex();
    System.out.println(modeid);
        // TODO add your handling code here:
    }//GEN-LAST:event_txImgListValueChanged
    private void set_MainModemModes(DefaultComboBoxModel model) {
        
        mainModemselector.setModel(model);
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new mainform().setVisible(true);
                } catch (XMLStreamException ex) {
                    Logger.getLogger(mainform.class.getName()).log(Level.SEVERE, null, ex);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(mainform.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider CQinterval;
    private javax.swing.JLabel CQintervalLabel;
    private javax.swing.JSlider CarrierCenter;
    private javax.swing.JLabel QRG;
    private javax.swing.JList<String> RXmodeList;
    private javax.swing.JLabel RXtransID;
    private javax.swing.JLabel RXtransID1;
    private javax.swing.JProgressBar SigQual;
    private javax.swing.JProgressBar SignalLevel;
    private javax.swing.JList<String> TXModeList;
    private javax.swing.JButton abortTXbutton;
    private javax.swing.JButton addStockButton;
    private javax.swing.JFileChooser addStockFileChooser;
    private javax.swing.JPanel aprsBEACONQUICKsettings;
    private javax.swing.JCheckBox autoCQ;
    private javax.swing.JCheckBox autoconnect_fldigi;
    private javax.swing.JCheckBox autoiAPRSstatus;
    private javax.swing.JCheckBox autoimagesave;
    private javax.swing.JCheckBox autolog;
    private javax.swing.JCheckBox autostart_fldigi;
    private javax.swing.JLabel blocknumber;
    private javax.swing.JLabel blocknumber1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton chooseCQimgButton;
    private javax.swing.JSlider compressionSlider;
    private javax.swing.JPanel connections_settingsPanel;
    private javax.swing.JPanel cqQUICKsettings;
    private javax.swing.JPanel cq_beaconPanel;
    private javax.swing.JPanel debugPanel;
    private javax.swing.JTextField debugtext;
    private javax.swing.JSlider digisquelch;
    private javax.swing.JCheckBox digisquelchswitch;
    private javax.swing.JFileChooser dirChooser;
    private javax.swing.JFileChooser dirChooser1;
    private javax.swing.JPanel featuredRXpanel;
    private javax.swing.JLabel fldigiAPRSintervalLabel;
    private javax.swing.JPanel fldigiPanel;
    private javax.swing.JToggleButton fldigi_connectButton;
    private javax.swing.JTextField fldigihost1;
    private javax.swing.JTextField fldigiport1;
    private javax.swing.JButton fldigisetdefaultButton;
    private javax.swing.JFileChooser getCQimg_Dialog;
    private javax.swing.JPanel iAPRSPanel;
    private javax.swing.JToggleButton iAPRS_connectButton;
    private javax.swing.JCheckBox iAPRSfeedbackRX;
    private javax.swing.JButton iAPRSsetdefaultButton;
    private javax.swing.JComboBox<String> imagesaveformat;
    private javax.swing.JTabbedPane imgRXpane;
    private javax.swing.JOptionPane importImagePane;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JList<String> jList5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollBar jScrollBar2;
    private javax.swing.JScrollBar jScrollBar3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTree jTree1;
    private javax.swing.JComboBox<String> mainEncSelector;
    private javax.swing.JComboBox<String> mainModemselector;
    private javax.swing.JButton mainTXButton;
    private javax.swing.JTextField main_fldigihost;
    private javax.swing.JTextField main_fldigiport;
    private javax.swing.JButton mainfolderselect;
    private javax.swing.JPanel overlayPanel;
    public static javax.swing.JTextField qaddebug;
    private javax.swing.JButton qick_choose_txImage;
    private javax.swing.JTextField qrgHz;
    private javax.swing.JTextField qrgMHz;
    private javax.swing.JTextField qrgkHz;
    private javax.swing.JPanel qsoPanel;
    private javax.swing.JTextField qso_Name;
    private javax.swing.JTextField qso_callsign;
    private javax.swing.JTextField qso_digimode;
    private javax.swing.JButton qso_logButton;
    private javax.swing.JTextField qso_qrg;
    private javax.swing.JTextField qso_starttime;
    private javax.swing.JTextField qso_starttime1;
    private javax.swing.JToggleButton qsorun;
    private javax.swing.JLabel quickcq_image;
    private javax.swing.JPanel rawrxpanel;
    private javax.swing.JPanel rigPanel;
    private javax.swing.JScrollPane rxHistory;
    private javax.swing.JList<String> rxImgList;
    private javax.swing.JLabel rxModemset;
    private javax.swing.JPanel rxPanel;
    private javax.swing.JTextField rxQ;
    private javax.swing.JTextField rxQ1;
    private javax.swing.JSlider rxautomin;
    private javax.swing.JCheckBox rxenableRSID;
    private javax.swing.JProgressBar rxheaderoverlaydata;
    private javax.swing.JToggleButton rxidButton;
    private javax.swing.JButton rximagesfolderselect;
    private javax.swing.JCheckBox rxrespectheadermode;
    private javax.swing.JButton savesettings;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JPanel settings_aprsPanel;
    private javax.swing.JCheckBox settings_autoAPRS_fldigibeacon;
    private javax.swing.JTextField settings_dir_txstockdir;
    private javax.swing.JPanel settings_directoryPanel;
    private javax.swing.JTextField settings_dirs_rxdir;
    private javax.swing.JToggleButton settings_editdefaultfldigi;
    private javax.swing.JToggleButton settings_editdefaultfldigi1;
    private javax.swing.JPanel settings_fldigiPanel;
    private javax.swing.JSlider settings_fldigi_interval;
    private javax.swing.JCheckBox settings_fldigi_spotting;
    private javax.swing.JSlider settings_fldigibeaconinterval;
    private javax.swing.JTextField settings_fldigidefaulthost;
    private javax.swing.JTextField settings_fldigidefaultport;
    private javax.swing.JPanel settings_freqPanel;
    private javax.swing.JTable settings_freq_table;
    private javax.swing.JTextField settings_iAPRSpassword;
    private javax.swing.JTextField settings_iAPRSport;
    private javax.swing.JTextField settings_iAPRSport1;
    private javax.swing.JTextField settings_iAPRSserver;
    private javax.swing.JPanel settings_imgprocessing;
    private javax.swing.JPanel settings_logging;
    private javax.swing.JTextField settings_main_dir;
    private javax.swing.JPanel settings_modesPanel;
    private javax.swing.JTabbedPane settingsmenuPane;
    private javax.swing.JTabbedPane sidePane;
    private javax.swing.JPanel sidetalkPanel;
    private javax.swing.JTabbedPane topPane;
    private javax.swing.JToggleButton tuneButton;
    private javax.swing.JList<String> txImgList;
    private javax.swing.JPanel txPanel;
    private javax.swing.JToggleButton txidButton;
    private javax.swing.JLabel tximage;
    private javax.swing.JTabbedPane tximgPane;
    private javax.swing.JPanel tximgPanel;
    private javax.swing.JSlider tximgsizeSlider;
    private javax.swing.JTextField txlogdir;
    private javax.swing.JButton txlogdirselect;
    private javax.swing.JButton txstockfolderselect;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
